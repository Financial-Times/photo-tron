swagger: "2.0"

info:
  title: Draft Annotations API
  description: API for reading and writing draft annotations
  version: 0.0.1
  license:
    name: MIT
  contact:
    name: Universal Publishing
    email: universal.publishing@ft.com

host: api.ft.com
basePath: "/"
schemes:
  - http
  - https

paths:
  /drafts/content/{uuid}/annotations:
    get:
      summary: Get Annotations for Content
      description: Returns the draft annotations for the content with the given uuid.
      tags:
        - Public API
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: The UUID of the content
          required: true
          type: string
          x-example: f368bbac-4bd9-11e7-919a-1e14ce4af89b
      responses:
        200:
          description: Returns an array of UPP format annotations for the given content uuid.
          examples:
            application/json:
              - id: http://api.ft.com/things/5507ab98-b747-3ebc-b816-11603b9009f4
        400:
          description: Invalid uuid supplied
        404:
          description: Annotations not found

  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        200:
          description: >
            Should always return 200 along with the output of the healthchecks - regardless
            of whether the healthchecks failed or not.
            Please inspect the overall ok property to see whether or not the application is healthy.
          examples:
            application/json:
              schemaVersion: 1
              systemCode: dewey-system-code
              name: app-name
              description: A descriptive description
              checks:
                - id: check-api-health
                  name: Check API Health
                  ok: false
                  severity: 1
                  businessImpact: A business impact this failure might have
                  technicalSummary: A technical description of what's gone wrong
                  panicGuide: https://dewey.ft.com/dewey-system-code.html
                  checkOutput: Technical output from the check
                  lastUpdated: 2017-08-03T10:44:32.324709638+01:00
              ok: true

  /__build-info:
    get:
      summary: Build Information
      description: >
        Returns application build info, such as the git repository and revision,
        the golang version it was built with, and the app release version.
      produces:
        - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        200:
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: 0.0.1
              repository: https://github.com/Financial-Times/app-name.git
              revision: 7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd
              builder: go version go1.6.3 linux/amd64
              dateTime: "20161123122615"
  /__gtg:
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's Good-To-Go.
      tags:
        - Health
      produces:
          - text/plain; charset=US-ASCII
      responses:
        200:
          description: The application is healthy enough to perform all its functions correctly - i.e. good to go.
          examples:
               text/plain; charset=US-ASCII: OK
        503:
          description: >
            One or more of the applications healthchecks have failed,
            so please do not use the app. See the /__health endpoint for more detailed information.
